@startuml

skinparam classAttributeIconSize 0

package ch.etmles.payroll {
    class "SpringApplication"
    class PayrollApplication {
        +main(String[]): void
    }
    "PayrollApplication" --> "SpringApplication"

    package member {
        interface MemberRepository<extends JARepository<Member, Long>>
        class MemberController {
            -memberService: MemberService
            +MemberController(MemberService memberService)
            +all(): Member[]
            +one(Long id): Member
            +add(Member member): Member
            +replace(Member member): Member
            +remove(Long id): void
        }
        class MemberService {
            -memberRepository: MemberRepository
            -teamService: TeamService
            +MemberService(MemberRepository memberRepository, TeamService teamService)
            +getAll(): Member[]
            +getById(Long id): Member
            +create(Member member): Member
            +modify(Long, Map<String, Object>): Member
            +update(Long id, Member member): Member
            +delete(Long id): void
        }
        class "MemberAdvice"
        exception "MemberNotInTeam"
        exception "MemberAlreadyInTeam"

        "MemberController" --> "MemberService"
        "MemberService" --> "MemberRepository"
        "MemberService" --> "MemberNotInTeam"
        "MemberService" --> "MemberAlreadyInTeam"
        "MemberAdvice" --> "MemberNotInTeam"
        "MemberAdvice" --> "MemberAlreadyInTeam"
    }
    "MemberService" --> team.TeamService
    "MemberService" --> "Exceptions"

    package memberRole {
        interface MemberRoleRepository<extends JARepository<MemberRole, Long>>
        class MemberRoleController {
            -memberRoleService: MemberRoleService
            +MemberRoleController(MemberRoleService memberRoleService)
            +all(): MemberRole[]
            +one(Long id): MemberRole
            +add(MemberRoleDTO memberRole): MemberRole
            +replace(MemberRoleDTO memberRole): MemberRole
            +remove(Long id): void
        }
        class MemberRoleService {
            -memberRoleRepository: MemberRoleRepository
            -memberService: MemberService
            +MemberRoleService(MemberRoleRepository memberRoleRepository)
            +getAll(): MemberRole[]
            +getById(Long id): MemberRole
            +create(MemberRoleDTO memberRole): MemberRole
            +update(Long id, MemberRoleDTO memberRole): MemberRole
            +delete(Long id): void
        }

        "MemberRoleController" --> "MemberRoleService"
        "MemberRoleService" --> "MemberRoleRepository"
        "MemberRoleService" --> "MemberService"
    }

    "MemberRoleService" --> "Exceptions"

    package team {
        interface TeamRepository<extends JARepository<Team, Long>>
        class TeamController {
            -teamService: TeamService
            +TeamController(TeamService teamService)
            +all(): Team[]
            +one(Long id): Team
            +add(Team team): Team
            +replace(Team team): Team
            +remove(Long id): void
        }
        class TeamService {
            -teamRepository: TeamRepository
            +TeamService(TeamRepository teamRepository)
            +getAll(): Team[]
            +getById(Long id): Team
            +create(Team team): Team
            +update(Long id, Team team): Team
            +delete(Long id): void
        }

        "TeamController" --> "TeamService"
        "TeamService" --> "TeamRepository"
    }

    "TeamService" --> "Exceptions"

    package Exceptions {
        exception "ResourceIDNotFound"
        exception "ResourceDeleteNotFound"
        class "ResourceNotFoundAdvice"

        "ResourceNotFoundAdvice" --> "ResourceIDNotFound"
        "ResourceNotFoundAdvice" --> "ResourceDeleteNotFound"
    }
}

@enduml